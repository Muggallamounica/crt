#CREATE AND PRINT GRAPH USING ADJACENCY MATRIX 
DIRECTED AND WEIGHTED
def addNode(v):
    global n
    if v in nodes:
        print(v,"is already existed")
    else:
        nodes.append(v)
        n=n+1 
    for x in graph:
        x.append(0)
    temp=[]
    for i in range(n):
        temp.append(0)
    graph.append(temp)
def show():
    for i in range(n):
        for j in range(n):
            print(graph[i][j],end=" ")
        print()
def addEdge(node1,node2,weight):
    if node1 not in nodes:
        print(node1,"is not available in graph")
    elif node2 not in nodes:
        print(node2,"is not available in graph")
    else:
        i=nodes.index(node1)
        j=nodes.index(node2)
        graph[i][j]=weight
nodes=[]
graph=[]
n=0
while True:
    print()
    print("1.AddNode\n2.addEdge\n3.printgraph\n4.Exit")
    ch=int(input("Enter your choice"))
    if ch==1:
        v=input("Enter node:")
        addNode(v)
    elif ch==2:
        node1=input("enter node1")
        node2=input("enter node2")
        weight=int(input("enter a weight"))
        addEdge(node1,node2,weight)
    elif ch==3:
        show()
    elif ch==4:
        break
    else:
        print("Invalid choice")





#OUTPUTS:

1.AddNode
2.addEdge
3.printgraph
4.Exit
Enter your choice1
Enter node:a A

1.AddNode
2.addEdge
3.printgraph
4.Exit
Enter your choice1
Enter node:B

1.AddNode
2.addEdge
3.printgraph
4.Exit
Enter your choice1
Enter node:C

1.AddNode
2.addEdge
3.printgraph
4.Exit
Enter your choice1
Enter node:C
C is already existed

1.AddNode
2.addEdge
3.printgraph
4.Exit
Enter your choice1
Enter node:D

1.AddNode
2.addEdge
3.printgraph
4.Exit
Enter your choice1 2
enter node1A
enter node2B
enter a weight2

1.AddNode
2.addEdge
3.printgraph
4.Exit
Enter your choice3
0 2 0 0 
0 0 0 0 
0 0 0 0 
0 0 0 0 

1.AddNode
2.addEdge
3.printgraph
4.Exit
Enter your choiceA 2
enter node1C
enter node2D
enter a weight4

1.AddNode
2.addEdge
3.printgraph
4.Exit
Enter your choice3
0 2 0 0 
0 0 0 0 
0 0 0 4 
0 0 0 0 

1.AddNode
2.addEdge
3.printgraph
4.Exit
Enter your choice